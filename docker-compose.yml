version: '3.8'

services:
  web:
    build: ./app  # Путь к вашему Flask приложению
    container_name: web
    ports:
      - "5000:5000"  # Проброс порта 5000 на хостовую машину
    networks:
      - monitoring
    labels:
      - "prometheus_job=flask_app"
      - "traefik.enable=true"                                # Включить для Traefik
      - "traefik.http.routers.web.rule=PathPrefix(`/musicservice`)"      # Доступ через корневой маршрут
      - "traefik.http.services.web.loadbalancer.server.port=5000"
    volumes:
      - ./app:/app  # Монтируем локальную папку с кодом в контейнер
    environment:
      - FLASK_APP=app.py  # Указание на главный файл приложения
      - FLASK_ENV=development  # Установка режима разработки
      - FLASK_DEBUG=1  # Включает режим отладки
      - DATABASE_URL=${DATABASE_URL}  # Строка подключения к базе данных
    # depends_on:
    #   - db
  # Сервис для PostgreSQL
  db:
    image: postgres:latest  # Используем официальную PostgreSQL-образ
    container_name: db
    environment:
      - POSTGRES_USER=postgres  # Имя пользователя
      - POSTGRES_PASSWORD=${DB_PASSWORD}  # Пароль пользователя
      - POSTGRES_DB=musicdb  # Название базы данных
    volumes:
      - ./db_data:/var/lib/postgresql/data  # Храним данные базы данных в volume
    networks:
      - monitoring

  postgresexporter:
    image: prometheuscommunity/postgres-exporter:latest
    environment:
      DATA_SOURCE_NAME: ${DATABASE_URL}
    ports:
      - "9187:9187"
    volumes:
      - ./pg_exporter/queries.yml:/etc/queries.yml
    command:
      - '--web.listen-address=:9187'
      - '--web.telemetry-path=/metrics'
      - '--collector.database_wraparound'
      - '--collector.long_running_transactions'
      - '--collector.postmaster'
      - '--collector.process_idle'
      - '--collector.stat_activity_autovacuum'
      - '--collector.stat_statements'
      - '--collector.stat_wal_receiver'
      - '--collector.statio_user_indexes'
      - '--extend.query-path=/etc/queries.yml'
    depends_on:
      - db

  # Сервис для pgAdmin (для удобного доступа к PostgreSQL через браузер)
  pgadmin:
    image: dpage/pgadmin4:latest  # Официальный образ pgAdmin
    container_name: pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=PathPrefix(`/pgadmin`)"
      - "traefik.http.middlewares.pgadmin-strip-prefix.stripprefix.prefixes=/pgadmin"
      - "traefik.http.routers.pgadmin.middlewares=pgadmin-strip-prefix"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=8081"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com  # Адрес электронной почты для входа
      - PGADMIN_DEFAULT_PASSWORD=admin  # Пароль для входа
      - PGADMIN_LISTEN_PORT=8081
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "8081:8081"  # Доступ через localhost:80
    networks:
      - monitoring
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"
      - "traefik.http.middlewares.prometheus-strip-prefix.stripprefix.prefixes=/prometheus"
      - "traefik.http.routers.prometheus.middlewares=prometheus-strip-prefix"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prom-data:/prometheus
      - prom-configs:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/datasources/
    labels:
      - "traefik.enable=true"                                    # Включить для Traefik
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)" # Доступ по lotolis/grafana
      - "traefik.http.middlewares.grafana-strip-prefix.stripprefix.prefixes=/grafana"
      - "traefik.http.routers.grafana.middlewares=grafana-strip-prefix"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_DASHBOARDS_JSON_ENABLED=true  # Включаем JSON дашборды
      - GF_DASHBOARDS_JSON_PATH=/etc/grafana/dashboards  # Путь к папке с дашбордами
      - GF_SERVER_ROOT_URL=http://lotolis/grafana/

    depends_on:
      - prometheus
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=PathPrefix(`/cadvisor`)"
      - "traefik.http.middlewares.cadvisor-strip-prefix.stripprefix.prefixes=/cadvisor"
      - "traefik.http.routers.cadvisor.middlewares=grafana-strip-prefix"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart:
      always
    networks:
      - monitoring

  node_exporter:
    image: prom/node-exporter:latest
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.node_exporter.rule=PathPrefix(`/node_exporter`)"
      - "traefik.http.middlewares.node_exporter-strip-prefix.stripprefix.prefixes=/node_exporter"
      - "traefik.http.routers.cadvisor.middlewares=grafana-strip-prefix"
      - "traefik.http.services.node_exporter.loadbalancer.server.port=9100"
    ports:
      - "9100:9100"
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    
  traefik:
    image: traefik:v2.10
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=PathPrefix(`/traefik`)"
      - "traefik.http.middlewares.traefik-strip-prefix.stripprefix.prefixes=/traefik"
      - "traefik.http.routers.cadvisor.middlewares=traefik-strip-prefix"
      - "traefik.http.services.traefik.loadbalancer.server.port=8085"
    ports:
      - "80:80"        # HTTP
      - "443:443"      # HTTPS (если нужно)
      - "8085:8080"    # Панель управления Traefik
    command:
      - "--api.insecure=true"                    # Включаем панель управления (доступно на http://lotolis:8080)
      - "--providers.docker=true"                # Автоматическое обнаружение сервисов в Docker
      - "--entrypoints.web.address=:80"          # Основной HTTP-вход
      - "--entrypoints.websecure.address=:443"   # HTTPS (при необходимости)
      - "--log.level=INFO" 
      - "--configFile=/etc/traefik/traefik.yml"                       # Уровень логирования
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Для взаимодействия с Docker
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
volumes:
  grafana_data:
  prom-data:
  prom-configs:
